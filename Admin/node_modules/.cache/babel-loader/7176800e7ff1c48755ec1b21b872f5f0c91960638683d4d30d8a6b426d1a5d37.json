{"ast":null,"code":"var _jsxFileName = \"/home/toxic/L3/S5/Mr Rojo/FinalCloudFront/Admin/src/Courbe.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto'; // Importer Chart depuis chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Courbe = () => {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    // Créer un contexte de dessin 2D pour le graphique\n    const ctx = chartRef.current.getContext('2d');\n\n    // Définir les données du graphique\n    const data = {\n      labels: ['January', 'February', 'March', 'April', 'May'],\n      datasets: [{\n        label: 'Monthly Sales',\n        backgroundColor: '#198754',\n        borderColor: 'rgba(75,192,192,1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n        hoverBorderColor: 'rgba(75,192,192,1)',\n        data: [65, 59, 80, 81, 56]\n      }]\n    };\n\n    // Définir les options du graphique\n    const options = {\n      scales: {\n        y: {\n          beginAtZero: true\n        }\n      }\n    };\n\n    // Créer une nouvelle instance de graphique\n    const myChart = new Chart(ctx, {\n      type: 'bar',\n      data: data,\n      options: options\n    });\n\n    // Nettoyer le graphique lors de la destruction du composant\n    return () => myChart.destroy();\n  }, []); // Exécuter cet effet uniquement au montage du composant\n\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: chartRef,\n    width: \"400\",\n    height: \"200\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n};\n_s(Courbe, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = Courbe;\nexport default Courbe;\nvar _c;\n$RefreshReg$(_c, \"Courbe\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","Courbe","_s","chartRef","ctx","current","getContext","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","options","scales","y","beginAtZero","myChart","type","destroy","ref","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/toxic/L3/S5/Mr Rojo/FinalCloudFront/Admin/src/Courbe.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto'; // Importer Chart depuis chart.js\n\nconst Courbe = () => {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    // Créer un contexte de dessin 2D pour le graphique\n    const ctx = chartRef.current.getContext('2d');\n\n    // Définir les données du graphique\n    const data = {\n      labels: ['January', 'February', 'March', 'April', 'May'],\n      datasets: [\n        {\n          label: 'Monthly Sales',\n          backgroundColor: '#198754',\n          borderColor: 'rgba(75,192,192,1)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(75,192,192,0.6)',\n          hoverBorderColor: 'rgba(75,192,192,1)',\n          data: [65, 59, 80, 81, 56],\n        },\n      ],\n    };\n\n    // Définir les options du graphique\n    const options = {\n      scales: {\n        y: {\n          beginAtZero: true,\n        },\n      },\n    };\n\n    // Créer une nouvelle instance de graphique\n    const myChart = new Chart(ctx, {\n      type: 'bar',\n      data: data,\n      options: options,\n    });\n\n    // Nettoyer le graphique lors de la destruction du composant\n    return () => myChart.destroy();\n  }, []); // Exécuter cet effet uniquement au montage du composant\n\n  return <canvas ref={chartRef} width=\"400\" height=\"200\" />;\n};\n\nexport default Courbe;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,GAAG,GAAGD,QAAQ,CAACE,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;;IAE7C;IACA,MAAMC,IAAI,GAAG;MACXC,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC;MACxDC,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,eAAe;QACtBC,eAAe,EAAE,SAAS;QAC1BC,WAAW,EAAE,oBAAoB;QACjCC,WAAW,EAAE,CAAC;QACdC,oBAAoB,EAAE,sBAAsB;QAC5CC,gBAAgB,EAAE,oBAAoB;QACtCR,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;MAC3B,CAAC;IAEL,CAAC;;IAED;IACA,MAAMS,OAAO,GAAG;MACdC,MAAM,EAAE;QACNC,CAAC,EAAE;UACDC,WAAW,EAAE;QACf;MACF;IACF,CAAC;;IAED;IACA,MAAMC,OAAO,GAAG,IAAItB,KAAK,CAACM,GAAG,EAAE;MAC7BiB,IAAI,EAAE,KAAK;MACXd,IAAI,EAAEA,IAAI;MACVS,OAAO,EAAEA;IACX,CAAC,CAAC;;IAEF;IACA,OAAO,MAAMI,OAAO,CAACE,OAAO,CAAC,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBAAOtB,OAAA;IAAQuB,GAAG,EAAEpB,QAAS;IAACqB,KAAK,EAAC,KAAK;IAACC,MAAM,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3D,CAAC;AAAC3B,EAAA,CA5CID,MAAM;AAAA6B,EAAA,GAAN7B,MAAM;AA8CZ,eAAeA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}