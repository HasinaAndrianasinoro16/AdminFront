{"ast":null,"code":"var _jsxFileName = \"/home/toxic/L3/S5/Mr Rojo/FinalCloudFront/Admin/src/Body.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport Header from './Header';\nimport { ScrollPanel } from 'primereact/scrollpanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Body() {\n  _s();\n  const [minDate, setMinDate] = useState('');\n  const [maxDate, setMaxDate] = useState('');\n  const [allCards, setAllCards] = useState([]);\n  const [filteredCards, setFilteredCards] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:8081/api/annonce/annonces_non_validees');\n        if (!response.ok) {\n          throw new Error('Erreur lors de la recuperation des annonces');\n        }\n        const data = await response.json();\n        setAllCards(data);\n        setFilteredCards(data); // Initialiser filteredCards avec toutes les annonces\n      } catch (error) {\n        console.error('Erreur:', error.message);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleFilter = () => {\n    // Mettez ici le code pour filtrer les annonces en fonction des dates sélectionnées\n    const filtered = allCards.filter(card => {\n      const cardDate = new Date(card.date_annonce).getTime();\n      const minDateValue = minDate ? new Date(minDate).getTime() : 0;\n      const maxDateValue = maxDate ? new Date(maxDate).getTime() : Infinity;\n      return cardDate >= minDateValue && cardDate <= maxDateValue;\n    });\n    setFilteredCards(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3 text-center fixed\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-floating mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              className: \"form-control\",\n              id: \"minDate\",\n              onChange: e => setMinDate(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"minDate\",\n              children: \"Date 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-floating mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              className: \"form-control\",\n              id: \"maxDate\",\n              onChange: e => setMaxDate(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"maxDate\",\n              children: \"Date 2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success btn-lg btn-block\",\n            onClick: handleFilter,\n            children: \"Filter Annonce\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ScrollPanel, {\n          className: \"col-md-9\",\n          style: {\n            height: '100vh'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-start\",\n            children: \"Annonce de voiture:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: filteredCards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n              annonce: card.idAnnonce,\n              prix: card.prix,\n              idvoiture: card.idCar,\n              date: card.date_annonce,\n              image: card.image_car,\n              lieu: card.lieu,\n              descs: card.description\n            }, card.idAnnonce, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 61\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Body, \"YqMzKLuPcUIgXFdOt1kU0Z7XMco=\");\n_c = Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","useEffect","Card","Header","ScrollPanel","jsxDEV","_jsxDEV","Fragment","_Fragment","Body","_s","minDate","setMinDate","maxDate","setMaxDate","allCards","setAllCards","filteredCards","setFilteredCards","fetchData","response","fetch","ok","Error","data","json","error","console","message","handleFilter","filtered","filter","card","cardDate","Date","date_annonce","getTime","minDateValue","maxDateValue","Infinity","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","id","onChange","e","target","value","htmlFor","onClick","style","height","map","annonce","idAnnonce","prix","idvoiture","idCar","date","image","image_car","lieu","descs","description","_c","$RefreshReg$"],"sources":["/home/toxic/L3/S5/Mr Rojo/FinalCloudFront/Admin/src/Body.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport Header from './Header';\nimport { ScrollPanel } from 'primereact/scrollpanel';\n\nexport default function Body() {\n  const [minDate, setMinDate] = useState('');\n  const [maxDate, setMaxDate] = useState('');\n  const [allCards, setAllCards] = useState([]);\n  const [filteredCards, setFilteredCards] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:8081/api/annonce/annonces_non_validees');\n\n        if (!response.ok) {\n          throw new Error('Erreur lors de la recuperation des annonces');\n        }\n\n        const data = await response.json();\n        setAllCards(data);\n        setFilteredCards(data); // Initialiser filteredCards avec toutes les annonces\n      } catch (error) {\n        console.error('Erreur:', error.message);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const handleFilter = () => {\n    // Mettez ici le code pour filtrer les annonces en fonction des dates sélectionnées\n    const filtered = allCards.filter(card => {\n      const cardDate = new Date(card.date_annonce).getTime();\n      const minDateValue = minDate ? new Date(minDate).getTime() : 0;\n      const maxDateValue = maxDate ? new Date(maxDate).getTime() : Infinity;\n\n      return cardDate >= minDateValue && cardDate <= maxDateValue;\n    });\n\n    setFilteredCards(filtered);\n  };\n\n  return (\n    <>\n      <Header />\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-md-3 text-center fixed\">\n            <h1>Filter</h1>\n            <div className=\"form-floating mb-4\">\n              <input type=\"date\" className=\"form-control\" id=\"minDate\" onChange={(e) => setMinDate(e.target.value)} />\n              <label htmlFor=\"minDate\">Date 1</label>\n            </div>\n            <div className=\"form-floating mb-4\">\n              <input type=\"date\" className=\"form-control\" id=\"maxDate\" onChange={(e) => setMaxDate(e.target.value)} />\n              <label htmlFor=\"maxDate\">Date 2</label>\n            </div>\n            <button className=\"btn btn-success btn-lg btn-block\" onClick={handleFilter}>\n              Filter Annonce\n            </button>\n          </div>\n\n          <ScrollPanel className=\"col-md-9\" style={{ height: '100vh' }}>\n            <h1 className=\"text-start\">Annonce de voiture:</h1>\n            <div className=\"row\">{filteredCards.map(card => <Card key={card.idAnnonce} annonce={card.idAnnonce} prix={card.prix} idvoiture={card.idCar} date={card.date_annonce} image={card.image_car} lieu={card.lieu} descs={card.description} />)}</div>\n          </ScrollPanel>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}